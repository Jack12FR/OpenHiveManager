<?php

/* 
 * Copyright (C) 2015 Kévin Grenèche < kevin.greneche at openhivemanager.org >
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace KG\BeekeepingManagementBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * RucherRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RucherRepository extends EntityRepository
{
    public function getListByExploitation($exploitation)
    {
        return $this->createQueryBuilder('r')
                    ->leftJoin('r.exploitation','e')
                    ->where('e.id = :exploitation')
                    ->setParameter('exploitation',$exploitation->getId())
                    ->getQuery();
    }  

    public function queryfindByExploitationId($exploitation, $rucher = null)
    {
        $q = $this->createQueryBuilder('rucher')
                  ->leftJoin('rucher.exploitation', 'exploitation')
                  ->leftJoin('rucher.emplacements', 'emplacements')
                  ->leftJoin('emplacements.ruche', 'ruche')
                  ->where('emplacements.id is not NULL')
                  ->andWhere('ruche is NULL');
        
        if($rucher){
            $q->andWhere('rucher.id != :rucher')
              ->andWhere('exploitation.id = :exploitation') 
              ->setParameter('rucher',$rucher);
        }else{
            $q->andWhere('exploitation.id = :exploitation');                
        }
        
        $q->setParameter('exploitation',$exploitation);
        
        return $q;
        
    }
    
    public function findByExploitationId($exploitation, $rucher = null)
    {
        return $this->queryfindByExploitationId($exploitation, $rucher)
                    ->getQuery()
                    ->getArrayResult();
    }
}
