<?php

namespace KG\BeekeepingManagementBundle\Controller;

use KG\BeekeepingManagementBundle\Entity\Exploitation;
use KG\BeekeepingManagementBundle\Entity\ApiculteurExploitation;
use KG\BeekeepingManagementBundle\Form\ExploitationType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;

class ExploitationController extends Controller
{
    /**
    * @Security("has_role('ROLE_USER')")
    */
    public function indexAction($page)
    {
        if ($page < 1){
            throw new NotFoundHttpException('Page "'.$page.'" inexistante.');
        }
        
        $maxExploitations        = $this->container->getParameter('max_exploitations_per_page');
        $apiculteurExploitations = $this->getDoctrine()->getRepository('KGBeekeepingManagementBundle:ApiculteurExploitation')
                                        ->findByApiculteur($this->getUser(), array(), $maxExploitations, ($page-1)*$maxExploitations );
        $exploitations_count     = count($this->getUser()->getApiculteurExploitations());
        
        $pagination = array(
            'page'         => $page,
            'route'        => 'kg_beekeeping_management_home_exploitation',
            'pages_count'  => max ( ceil($exploitations_count / $maxExploitations), 1),
            'route_params' => array()
        );
        
        return $this->render('KGBeekeepingManagementBundle:Exploitation:index.html.twig', 
                            array(  
                                 'apiculteurExploitations' => $apiculteurExploitations,
                                 'nbExploitations'         => $exploitations_count,
                                 'pagination'              => $pagination
                            )
        ); 
    }

    /**
    * @Security("has_role('ROLE_USER')")
    */    
    public function viewAction($id)
    {
        $exploitation = $this->getDoctrine()->getManager()->getRepository('KGBeekeepingManagementBundle:Exploitation')->find($id);
        return $this->render('KGBeekeepingManagementBundle:Exploitation:view.html.twig', 
                            array( 
                                'exploitation'    =>$exploitation
                            )
        );
    }

    /**
    * @Security("has_role('ROLE_USER')")
    */    
    public function addAction(Request $request)
    {
        $exploitation = new Exploitation();
        $form = $this->get('form.factory')->create(new ExploitationType, $exploitation);
        
        if ($form->handleRequest($request)->isValid()){
            
            //Ajout de l'utilisateur courant comme responsable de cette nouvelle exploitation
            $apiculteurExploitation = new ApiculteurExploitation($this->getUser(), $exploitation, true);
            $exploitation->addApiculteurExploitations($apiculteurExploitation);
                
            //Récupération du manager
            $em = $this->getDoctrine()->getManager();
            
            //Persistence de l'exploitation
            $em->persist($exploitation);
            
            //Sauvegarde
            $em->flush();
        
            $request->getSession()->getFlashBag()->add('success','Exploitation créée avec succès');
        
            return $this->redirect($this->generateUrl('kg_beekeeping_management_view_exploitation', array('id' => $exploitation->getId())));
        }

        return $this->render('KGBeekeepingManagementBundle:Exploitation:add.html.twig', array('form' => $form->createView()));
    } 
}