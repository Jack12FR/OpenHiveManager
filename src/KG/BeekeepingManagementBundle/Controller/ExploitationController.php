<?php

/* 
 * Copyright (C) 2015 Kévin Grenèche < kevin.greneche at openhivemanager.org >
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace KG\BeekeepingManagementBundle\Controller;

use KG\BeekeepingManagementBundle\Entity\Exploitation;
use KG\BeekeepingManagementBundle\Entity\ApiculteurExploitation;
use KG\BeekeepingManagementBundle\Form\Type\ExploitationType;
use KG\BeekeepingManagementBundle\Form\Type\ChangeExploitationType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;

class ExploitationController extends Controller
{    
    /**
    * @Security("has_role('ROLE_USER')")
    */    
    public function addAction(Request $request)
    { 
        if( !$this->getUser()->getApiculteurExploitations()->isEmpty() ){
            throw new NotFoundHttpException('Page inexistante.');
        } 
        
        $exploitation = new Exploitation();
        $form = $this->createForm(new ExploitationType, $exploitation);
        
        if ($form->handleRequest($request)->isValid()){
            
            //Ajout de l'utilisateur courant comme responsable de cette nouvelle exploitation
            $apiculteurExploitation = new ApiculteurExploitation($this->getUser(), $exploitation, true);
            $exploitation->addApiculteurExploitation($apiculteurExploitation);
                            
            //Récupération du manager
            $em = $this->getDoctrine()->getManager();
            
            //Persistence de l'exploitation
            $em->persist($exploitation);
            
            //Sauvegarde
            $em->flush();
        
            $flash = $this->get('braincrafted_bootstrap.flash');
            $flash->success('Exploitation créée avec succès');
        
            return $this->redirect($this->generateUrl('kg_beekeeping_management_home'));
        }

        return $this->render('KGBeekeepingManagementBundle:Exploitation:add.html.twig', array('form' => $form->createView()));
    }

    /**
    * @Security("has_role('ROLE_USER')")
    * @ParamConverter("exploitation", options={"mapping": {"exploitation_id" : "id"}}) 
    */    
    public function updateAction(Exploitation $exploitation, Request $request)
    {
        $apiculteurExploitations = $exploitation->getApiculteurExploitations();
        $not_permitted = true;
        
        foreach ( $apiculteurExploitations as $apiculteurExploitation ){
            if( $apiculteurExploitation->getApiculteur()->getId() == $this->getUser()->getId() ){
                $not_permitted = false;
                break;
            }
        }
        
        if( $not_permitted ){
            throw new NotFoundHttpException('Page inexistante.');
        }
        
        $form = $this->createForm(new ExploitationType, $exploitation);
        
        if ($form->handleRequest($request)->isValid()){
                                      
            //Récupération du manager
            $em = $this->getDoctrine()->getManager();
            
            //Persistence de l'exploitation
            $em->persist($exploitation);
            
            //Sauvegarde
            $em->flush();
        
            $flash = $this->get('braincrafted_bootstrap.flash');
            $flash->success('Exploitation mise à jour avec succès');
        
            return $this->redirect($this->generateUrl('kg_beekeeping_management_home'));
        }

        return $this->render('KGBeekeepingManagementBundle:Exploitation:update.html.twig', 
                                array(
                                    'form'         => $form->createView(),
                                    'exploitation' => $exploitation
                                ));
    }    
    
    /**
    * @Security("has_role('ROLE_USER')")
    * @ParamConverter("exploitation", options={"mapping": {"exploitation_id" : "id"}}) 
    */    
    public function deleteAction(Exploitation $exploitation)
    {
        $apiculteurExploitations = $exploitation->getApiculteurExploitations();
        $not_permitted = true;
        
        foreach ( $apiculteurExploitations as $apiculteurExploitation ){
            if( $apiculteurExploitation->getApiculteur()->getId() == $this->getUser()->getId() ){
                $not_permitted = false;
                break;
            }
        }
        
        if( $not_permitted ){
            throw new NotFoundHttpException('Page inexistante.');
        }        
        
        $em = $this->getDoctrine()->getManager();
        $em->remove($exploitation);
        $em->flush();

        $flash = $this->get('braincrafted_bootstrap.flash');
        $flash->success('Exploitaiton supprimée avec succès');
        
        return $this->redirect($this->generateUrl('kg_beekeeping_management_home'));        
    }    
}