<?php

namespace KG\BeekeepingManagementBundle\Controller;

use KG\BeekeepingManagementBundle\Entity\Exploitation;
use KG\BeekeepingManagementBundle\Entity\ApiculteurExploitation;
use KG\BeekeepingManagementBundle\Form\ExploitationType;
use KG\BeekeepingManagementBundle\Form\ChangeExploitationType;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Security;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\ParamConverter;

class ExploitationController extends Controller
{
    /**
    * @Security("has_role('ROLE_USER')")
    * @ParamConverter("exploitation", options={"mapping": {"exploitation_id" : "id"}}) 
    */
    public function viewAction(Exploitation $exploitation, $page)
    {        
        if( $page < 1 ){
            throw new NotFoundHttpException('Page inexistante.');
        }

        $this->getUser()->setExploitationEnCours($exploitation);
        $em = $this->getDoctrine()->getManager();
        $em->persist($this->getUser());
        $em->flush();
        
        $maxRuchers     = $this->container->getParameter('max_ruchers_per_page');
        $ruchers        = $this->getDoctrine()->getRepository('KGBeekeepingManagementBundle:Rucher')->getListByExploitation($page, $maxRuchers, $exploitation->getId());
        $ruchers_count  = $this->getDoctrine()->getRepository('KGBeekeepingManagementBundle:Rucher')->countByExploitation($exploitation->getId()); 
        
        $pagination = array(
            'page'         => $page,
            'route'        => 'kg_beekeeping_management_view_exploitation',
            'pages_count'  => max ( ceil($ruchers_count / $maxRuchers), 1),
            'route_params' => array('exploitation_id' => $exploitation->getId())
        );
             
        return $this->render('KGBeekeepingManagementBundle:Exploitation:view.html.twig', 
                array(  'exploitation' => $exploitation,
                        'ruchers'      => $ruchers,
                        'nbRuchers'    => $ruchers_count,
                        'pagination'   => $pagination));
    }

    /**
    * @Security("has_role('ROLE_USER')")
    */    
    public function addAction(Request $request)
    {
        $exploitation = new Exploitation();
        $form = $this->createForm(new ExploitationType, $exploitation);
        
        if ($form->handleRequest($request)->isValid()){
            
            //Ajout de l'utilisateur courant comme responsable de cette nouvelle exploitation
            $apiculteurExploitation = new ApiculteurExploitation($this->getUser(), $exploitation, true);
            $exploitation->addApiculteurExploitation($apiculteurExploitation);
            
            //Ajout de l'exploitation comme exploitation en cours du user
            $this->getUser()->setExploitationEnCours($exploitation);
                
            //Récupération du manager
            $em = $this->getDoctrine()->getManager();
            
            //Persistence de l'exploitation et du user
            $em->persist($exploitation);
            $em->persist($this->getUser());
            
            //Sauvegarde
            $em->flush();
        
            $request->getSession()->getFlashBag()->add('success','Exploitation créée avec succès');
        
            return $this->redirect($this->generateUrl('kg_beekeeping_management_view_exploitation', array('exploitation_id' => $exploitation->getId())));
        }

        return $this->render('KGBeekeepingManagementBundle:Exploitation:add.html.twig', array('form' => $form->createView()));
    }
}